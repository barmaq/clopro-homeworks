----------------------
1
----------------------

Настроить с помощью Terraform кластер баз данных MySQL.
Используя настройки VPC из предыдущих домашних заданий, добавить дополнительно подсеть private в разных зонах, чтобы обеспечить отказоустойчивость.
Разместить ноды кластера MySQL в разных подсетях.
Необходимо предусмотреть репликацию с произвольным временем технического обслуживания.
Использовать окружение Prestable, платформу Intel Broadwell с производительностью 50% CPU и размером диска 20 Гб.
Задать время начала резервного копирования — 23:59.
Включить защиту кластера от непреднамеренного удаления.
Создать БД с именем netology_db, логином и паролем.

1 vpc
2 private zone
ноды кластера MySQL в разных подсетях
окружение Prestable, платформу Intel Broadwell с производительностью 50% CPU и размером диска 20 Гб.
Задать время начала резервного копирования — 23:59
время обслуживания в любой момент. репликация
Включить защиту кластера от непреднамеренного удаления
Создать БД с именем netology_db, логином и паролем


----------------------
2
----------------------

Настроить с помощью Terraform кластер Kubernetes.

Используя настройки VPC из предыдущих домашних заданий, добавить дополнительно две подсети public в разных зонах, чтобы обеспечить отказоустойчивость.
переписал переменные подсетей на map (object) чтобы не путаться в куче переменных. можно создавать подсети через for each или count , но тут решил задавтаь напрямую, для полного контроля

Создать отдельный сервис-аккаунт с необходимыми правами.
создал используя resource "yandex_iam_service_account"

Создать региональный мастер Kubernetes с размещением нод в трёх разных подсетях.
создал используя resource "yandex_kubernetes_cluster"

Добавить возможность шифрования ключом из KMS, созданным в предыдущем домашнем задании.
создал используя  resource "yandex_kms_symmetric_key"

Создать группу узлов, состояющую из трёх машин с автомасштабированием до шести.


Подключиться к кластеру с помощью kubectl.  

yc managed-kubernetes cluster list
yc managed-kubernetes cluster get-credentials <id> --external
kubectl cluster-info 
kubectl get node
kubectl get all -A

*Запустить микросервис phpmyadmin и подключиться к ранее созданной БД.
*Создать сервис-типы Load Balancer и подключиться к phpmyadmin. Предоставить скриншот с публичным адресом и подключением к БД.

kubectl apply -f phpmyadmin.yaml
kubectl get deployments
kubectl get svc






